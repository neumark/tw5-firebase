rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	// don't allow direct writes from the SDK (go through cloud function)
    allow write: if false;
    
    // every user can read their own personal bag
    match /wikis/{wikiName}/bags/{personalBag}/tiddlers/{document=**} {    	
    	allow get, list: if request.auth != null && (personalBag == 'user%3A' + request.auth.uid);
    }
    // for all other bags, the user's role must be verified
    match /wikis/{wikiName}/bags/{bagName}/tiddlers/{document=**} {
        function hasReadAccessByRole() {
          // don't allow access to personal bags in this match clause
          let isPersonalBag = bagName.matches('^user%3A.*');
          // anybody with at least reader can read non-personal bags
          let role = get(/databases/$(database)/documents/wikis/$(wikiName)/bags/etc/tiddlers/$('%2Fetc%2Fusers%2F' + request.auth.uid)).data.fields.role;
          // personal bags use the other match clause
          return !isPersonalBag &&
            // allow reader and above roles to read content and system bags
            ((role in ['reader', 'editor', 'admin'] && bagName in ['content', 'system']) ||
            // only admins can read the etc bag
            (role == 'admin' && bagName == 'etc'));
        }
        allow get, list: if request.auth != null && hasReadAccessByRole();
    }
  }
}
